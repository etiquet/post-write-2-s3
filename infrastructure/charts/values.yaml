global:
  namespace: odfclient
  createsecretmaps: true

app:
  name: olympic-datafeed-upload
  replicaCount: 1
  image:
    repository: etiquet/olympic-datafeed-upload
    tag: "1.00"
  imagePullSecrets: "" #my-regcred
  s3Directory: "erics-test2/odfclient"
  s3SkipVerify: "false"
  s3Webhook: ""
  #s3Bucket: "change-bucket"
  #s3AccessKeyId: "change-access-key-id"
  #s3SecretAccessKey: "change-secret-access-key"
  #s3Region: "change-region"
  s3Bucket: "erics-test-odf"
  s3AccessKeyId: "SCWYNWEVHEKYB7PFW8KB"
  s3SecretAccessKey: "b7c26d1e-2a9a-465f-8f4e-c7b26abb8b83"
  s3Region: "fr-par"
  s3Url: https://s3.fr-par.scw.cloud  

nginx:
  enabled: true
  nameOverride: odf-nginx
  namespaceOverride: odfclient
  #image.registry:
  #image.repository:
  #image.pullSecrets
  #autoscaling.enabled: "true"
  #autoscaling.minReplicas	Minimum number of replicas to scale back	""
  #autoscaling.maxReplicas
  replicaCount: 1
  image:
    registry: docker.io
    repository: bitnami/nginx
    #tag: 1.19.2-debian-10-r50
  service:
    type: LoadBalancer
    port: 8080
  ingress:
    enabled: true
    annotations: {}
    hostname: "api-cncs.numerique-interieur.com"
    path: /
    tls: false
  existingServerBlockConfigmap: odf-nginx-proxy-configmap  
