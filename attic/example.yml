apiVersion: apps/v1
kind: Deployment
metadata:
  name: cnsc-s3-app-s3-upload-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cnsc-s3-app-s3-upload-app
  template:
    metadata:
      labels:
        app: cnsc-s3-app-s3-upload-app
    spec:
      securityContext:
        fsGroup: 100101
      containers:
        - name: cnsc-s3-app-s3-upload-app
          image: docker.io/etiquet/s3-upload-app:1.41
          ports:
            - containerPort: 5000
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: s3-upload-app-secret
                  key: S3_BUCKET
            - name: S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: s3-upload-app-secret
                  key: S3_ACCESS_KEY_ID
            - name: S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-upload-app-secret
                  key: S3_SECRET_ACCESS_KEY
            - name: S3_REGION
              valueFrom:
                secretKeyRef:
                  name: s3-upload-app-secret
                  key: S3_REGION
            - name: S3_URL
              valueFrom:
                secretKeyRef:
                  name: s3-upload-app-secret
                  key: S3_URL
            - name: S3_FOLDER
              valueFrom:
                secretKeyRef:
                  name: s3-upload-app-secret
                  key: S3_FOLDER
            - name: S3_SKIP_VERIFY
              valueFrom:
                secretKeyRef:
                  name: s3-upload-app-secret
                  key: S3_SKIP_VERIFY
            - name: S3_WEBHOOK
              valueFrom:
                secretKeyRef:
                  name: s3-upload-app-secret
                  key: S3_WEBHOOK
          volumeMounts:
            - name: tmp-folder
              mountPath: /tmp
            - name: ephemeral-data
              mountPath: /data/
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 100101
            runAsGroup: 100101
            fsGroup: 100101
      imagePullSecrets:
        - name: regcred
      volumes:
        - name: tmp-folder
          emptyDir:
            sizeLimit: 500Mi
        - name: ephemeral-data
          ephemeral:
            volumeClaimTemplate:
              metadata:
                labels:
                  type: ephemeral-data
              spec:
                accessModes: ["ReadWriteOnce"]
                # {{ if .Values.ephemeral.persistentVolumeClaim.storageClass }}
                # storageClassName: {{ .Values.ephemeral.persistentVolumeClaim.storageClass }}
                # {{ end }}
                resources:
                  requests:
                    storage: 10Gi
